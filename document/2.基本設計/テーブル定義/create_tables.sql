
-- 1. 予定タスクテーブル
CREATE TABLE TASK_PLAN (
    id SERIAL PRIMARY KEY,
    project_id INTEGER NOT NULL,
    phase_id INTEGER NOT NULL,
    category_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    planned_start_date DATE,
    planned_end_date DATE,
    effort NUMERIC(5,2),
    status VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE TASK_PLAN IS '予定タスクテーブル';
COMMENT ON COLUMN TASK_PLAN.id IS 'ID';
COMMENT ON COLUMN TASK_PLAN.project_id IS '案件ID';
COMMENT ON COLUMN TASK_PLAN.phase_id IS 'フェーズID';
COMMENT ON COLUMN TASK_PLAN.category_id IS 'カテゴリID';
COMMENT ON COLUMN TASK_PLAN.user_id IS '担当ユーザID';
COMMENT ON COLUMN TASK_PLAN.title IS 'タイトル';
COMMENT ON COLUMN TASK_PLAN.description IS '説明';
COMMENT ON COLUMN TASK_PLAN.planned_start_date IS '予定開始日';
COMMENT ON COLUMN TASK_PLAN.planned_end_date IS '予定終了日';
COMMENT ON COLUMN TASK_PLAN.effort IS '工数';
COMMENT ON COLUMN TASK_PLAN.status IS 'ステータス';
COMMENT ON COLUMN TASK_PLAN.created_at IS '作成日時';
COMMENT ON COLUMN TASK_PLAN.updated_at IS '更新日時';

-- 2. 実績タスクテーブル
CREATE TABLE TASK_ACTUAL (
    id SERIAL PRIMARY KEY,
    task_plan_id INTEGER NOT NULL,
    actual_start_date DATE,
    actual_end_date DATE,
    effort NUMERIC(5,2),
    remarks TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE TASK_ACTUAL IS '実績タスクテーブル';
COMMENT ON COLUMN TASK_ACTUAL.id IS 'ID';
COMMENT ON COLUMN TASK_ACTUAL.task_plan_id IS '予定タスクID';
COMMENT ON COLUMN TASK_ACTUAL.actual_start_date IS '実績開始日';
COMMENT ON COLUMN TASK_ACTUAL.actual_end_date IS '実績終了日';
COMMENT ON COLUMN TASK_ACTUAL.effort IS '工数';
COMMENT ON COLUMN TASK_ACTUAL.remarks IS '備考';
COMMENT ON COLUMN TASK_ACTUAL.created_at IS '作成日時';
COMMENT ON COLUMN TASK_ACTUAL.updated_at IS '更新日時';

-- 3. 依存タスクテーブル
CREATE TABLE TASK_INPUT (
    id SERIAL PRIMARY KEY,
    task_id INTEGER NOT NULL,
    depends_on_task_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE TASK_INPUT IS '依存タスクテーブル';
COMMENT ON COLUMN TASK_INPUT.id IS 'ID';
COMMENT ON COLUMN TASK_INPUT.task_id IS 'タスクID';
COMMENT ON COLUMN TASK_INPUT.depends_on_task_id IS '依存先タスクID';
COMMENT ON COLUMN TASK_INPUT.created_at IS '作成日時';

-- 4. ユーザテーブル
CREATE TABLE "USER" (
    id SERIAL PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    display_name VARCHAR(100),
    email VARCHAR(255),
    role VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE "USER" IS 'ユーザテーブル';
COMMENT ON COLUMN "USER".id IS 'ID';
COMMENT ON COLUMN "USER".username IS 'ユーザ名';
COMMENT ON COLUMN "USER".password IS 'パスワード';
COMMENT ON COLUMN "USER".display_name IS '表示名';
COMMENT ON COLUMN "USER".email IS 'メールアドレス';
COMMENT ON COLUMN "USER".role IS '権限';
COMMENT ON COLUMN "USER".created_at IS '作成日時';
COMMENT ON COLUMN "USER".updated_at IS '更新日時';

-- 5. 案件マスタ
CREATE TABLE PROJECT_MASTER (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    start_date DATE,
    end_date DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE PROJECT_MASTER IS '案件マスタ';
COMMENT ON COLUMN PROJECT_MASTER.id IS 'ID';
COMMENT ON COLUMN PROJECT_MASTER.name IS '案件名';
COMMENT ON COLUMN PROJECT_MASTER.description IS '説明';
COMMENT ON COLUMN PROJECT_MASTER.start_date IS '開始日';
COMMENT ON COLUMN PROJECT_MASTER.end_date IS '終了日';
COMMENT ON COLUMN PROJECT_MASTER.created_at IS '作成日時';
COMMENT ON COLUMN PROJECT_MASTER.updated_at IS '更新日時';

-- 6. フェーズマスタ
CREATE TABLE PHASE_MASTER (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE PHASE_MASTER IS 'フェーズマスタ';
COMMENT ON COLUMN PHASE_MASTER.id IS 'ID';
COMMENT ON COLUMN PHASE_MASTER.name IS 'フェーズ名';
COMMENT ON COLUMN PHASE_MASTER.description IS '説明';
COMMENT ON COLUMN PHASE_MASTER.created_at IS '作成日時';

-- 7. カテゴリマスタ
CREATE TABLE CATEGORY_MASTER (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE CATEGORY_MASTER IS 'カテゴリマスタ';
COMMENT ON COLUMN CATEGORY_MASTER.id IS 'ID';
COMMENT ON COLUMN CATEGORY_MASTER.name IS 'カテゴリ名';
COMMENT ON COLUMN CATEGORY_MASTER.description IS '説明';
COMMENT ON COLUMN CATEGORY_MASTER.created_at IS '作成日時';

-- 8. アラーム履歴テーブル
CREATE TABLE ALARM_HISTORY (
    id SERIAL PRIMARY KEY,
    task_id INTEGER NOT NULL,
    alarm_type VARCHAR(50),
    alarm_time TIMESTAMP NOT NULL,
    message TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE ALARM_HISTORY IS 'アラーム履歴テーブル';
COMMENT ON COLUMN ALARM_HISTORY.id IS 'ID';
COMMENT ON COLUMN ALARM_HISTORY.task_id IS 'タスクID';
COMMENT ON COLUMN ALARM_HISTORY.alarm_type IS 'アラーム種別';
COMMENT ON COLUMN ALARM_HISTORY.alarm_time IS 'アラーム発生日時';
COMMENT ON COLUMN ALARM_HISTORY.message IS 'メッセージ';
COMMENT ON COLUMN ALARM_HISTORY.created_at IS '作成日時';
